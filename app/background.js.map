{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"electron\"","webpack:///external \"fs-jetpack\"","webpack:///external \"path\"","webpack:///external \"fs\"","webpack:///external \"xml2js\"","webpack:///external \"url\"","webpack:///external \"auto-launch\"","webpack:///external \"electron-prompt\"","webpack:///external \"xmlhttprequest\"","webpack:///external \"object-to-xml\"","webpack:///./src/helpers/window.js","webpack:///./src/background.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","options","userDataDir","jetpack","cwd","app","getPath","stateStoreFile","defaultSize","width","height","win","state","windowState","restoredState","read","err","assign","restore","screen","getAllDisplays","some","display","bounds","x","y","windowWithinBounds","getPrimaryDisplay","resetToDefaults","BrowserWindow","on","isMinimized","isMaximized","position","getPosition","size","getSize","getCurrentPosition","write","atomic","AutoLaunch","prompt","fs","XMLHttpRequest","homePath","folderName","iconPath","path","join","__dirname","trayIconPath","mainWindow","tray","parser","parseString","object2xml","affirmArray","env","userDataPath","setPath","setAppUserModelId","createWindow","show","icon","loadURL","url","format","pathname","protocol","slashes","openDevTools","getXMLData","readFile","data","console","log","message","body","baseURL","Http","open","setRequestHeader","send","onreadystatechange","AffirmationFullPath","readyState","this","status","xmlData","response","responseText","forEach","element","jjj","split","push","fileContent","myXMLData","existsSync","mkdirSync","recursive","writeFile","reload","webContents","error","statusText","myFilePath","label","alwaysOnTop","menuBarVisible","inputAttrs","type","required","then","res","validEmail","test","String","toLowerCase","catch","autoLaunch","isEnabled","enable","Tray","nativeImage","createFromPath","contextMenu","Menu","buildFromTemplate","click","setToolTip","setContextMenu","requestSingleInstanceLock","quit","event","argv","focus"],"mappings":"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","file":"background.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 16);\n","module.exports = require(\"electron\");","module.exports = require(\"fs-jetpack\");","module.exports = require(\"path\");","module.exports = require(\"fs\");","module.exports = require(\"xml2js\");","module.exports = require(\"url\");","module.exports = require(\"auto-launch\");","module.exports = require(\"electron-prompt\");","module.exports = require(\"xmlhttprequest\");","module.exports = require(\"object-to-xml\");","// This helper remembers the size and position of your windows (and restores\r\n// them in that place after app relaunch).\r\n// Can be used for more than one window, just construct many\r\n// instances of it and give each different name.\r\n\r\nimport { app, BrowserWindow, screen } from \"electron\";\r\nimport jetpack from \"fs-jetpack\";\r\n\r\nexport default (name, options) => {\r\n  const userDataDir = jetpack.cwd(app.getPath(\"userData\"));\r\n  const stateStoreFile = `window-state-${name}.json`;\r\n  const defaultSize = {\r\n    width: options.width,\r\n    height: options.height\r\n  };\r\n  let state = {};\r\n  let win;\r\n\r\n  const restore = () => {\r\n    let restoredState = {};\r\n    try {\r\n      restoredState = userDataDir.read(stateStoreFile, \"json\");\r\n    } catch (err) {\r\n      // For some reason json can't be read (might be corrupted).\r\n      // No worries, we have defaults.\r\n    }\r\n    return Object.assign({}, defaultSize, restoredState);\r\n  };\r\n\r\n  const getCurrentPosition = () => {\r\n    const position = win.getPosition();\r\n    const size = win.getSize();\r\n    return {\r\n      x: position[0],\r\n      y: position[1],\r\n      width: size[0],\r\n      height: size[1]\r\n    };\r\n  };\r\n\r\n  const windowWithinBounds = (windowState, bounds) => {\r\n    return (\r\n      windowState.x >= bounds.x &&\r\n      windowState.y >= bounds.y &&\r\n      windowState.x + windowState.width <= bounds.x + bounds.width &&\r\n      windowState.y + windowState.height <= bounds.y + bounds.height\r\n    );\r\n  };\r\n\r\n  const resetToDefaults = () => {\r\n    const bounds = screen.getPrimaryDisplay().bounds;\r\n    return Object.assign({}, defaultSize, {\r\n      x: (bounds.width - defaultSize.width) / 2,\r\n      y: (bounds.height - defaultSize.height) / 2\r\n    });\r\n  };\r\n\r\n  const ensureVisibleOnSomeDisplay = windowState => {\r\n    const visible = screen.getAllDisplays().some(display => {\r\n      return windowWithinBounds(windowState, display.bounds);\r\n    });\r\n    if (!visible) {\r\n      // Window is partially or fully not visible now.\r\n      // Reset it to safe defaults.\r\n      return resetToDefaults();\r\n    }\r\n    return windowState;\r\n  };\r\n\r\n  const saveState = () => {\r\n    if (!win.isMinimized() && !win.isMaximized()) {\r\n      Object.assign(state, getCurrentPosition());\r\n    }\r\n    userDataDir.write(stateStoreFile, state, { atomic: true });\r\n  };\r\n\r\n  state = ensureVisibleOnSomeDisplay(restore());\r\n\r\n  win = new BrowserWindow(Object.assign({}, options, state));\r\n\r\n  win.on(\"close\", saveState);\r\n\r\n  return win;\r\n};\r\n","// This is main process of Electron, started as first thing when your\r\n// app starts. It runs through entire life of your application.\r\n// It doesn't have any windows which you can see on screen, but we can open\r\n// window from here.\r\n\r\nimport path from \"path\";\r\nimport url from \"url\";\r\nimport { app, BrowserWindow, Tray, Menu, nativeImage } from \"electron\";\r\nimport { devMenuTemplate } from \"./menu/dev_menu_template\";\r\nimport createWindow from \"./helpers/window\";\r\nimport env from \"env\";\r\n\r\nconst AutoLaunch = require(\"auto-launch\");\r\nconst prompt = require(\"electron-prompt\");\r\nvar fs = require(\"fs\");\r\nvar XMLHttpRequest = require(\"xmlhttprequest\").XMLHttpRequest;\r\nconst homePath = app.getPath(\"appData\");\r\nconst folderName = `${homePath}/Clarion_RemindMe_App`;\r\nconst iconPath = path.join(__dirname, \"../build/icon.png\");\r\nconst trayIconPath = path.join(__dirname, \"icon.png\");\r\nlet tray = null;\r\nlet mainWindow;\r\nlet parser = require(\"xml2js\").parseString;\r\nlet object2xml = require(\"object-to-xml\");\r\nlet affirmArray = [];\r\n\r\n// Save userData in separate folders for each environment.\r\n// Thanks to this you can use production and development versions of the app\r\n// on same machine like those are two separate apps.\r\nif (env.name !== \"production\") {\r\n  const userDataPath = app.getPath(\"userData\");\r\n  app.setPath(\"userData\", `${userDataPath} (${env.name})`);\r\n}\r\n\r\napp.on(\"ready\", () => {\r\n  app.setAppUserModelId(\" \");\r\n  mainWindow = createWindow(\"main\", {\r\n    width: 1000,\r\n    height: 600,\r\n    show: false,\r\n    icon: path.join(__dirname, \"../build/icon.png\")\r\n  });\r\n\r\n  mainWindow.loadURL(\r\n    url.format({\r\n      pathname: path.join(__dirname, \"app.html\"),\r\n      protocol: \"file:\",\r\n      slashes: true\r\n    })\r\n  );\r\n\r\n  if (env.name === \"development\") {\r\n    mainWindow.openDevTools();\r\n  }\r\n});\r\n\r\nlet parsingXML = response => {\r\n  var myXMLData;\r\n  parser(response, (err, data) => {\r\n    if (data) {\r\n      let res =\r\n        data[\"s:Envelope\"][\"s:Body\"][0][\"GetAffirmationsResponse\"][0][\r\n          \"GetAffirmationsResult\"\r\n        ][0][\"a:string\"];\r\n\r\n      res.forEach(element => {\r\n        let jjj = element.split(\"=\")[2].split(\"/&gt;\")[0];\r\n        affirmArray.push(`${jjj}`);\r\n      });\r\n      let fileContent = { ...affirmArray };\r\n\r\n      myXMLData = object2xml(fileContent);\r\n    }\r\n  });\r\n  return myXMLData;\r\n};\r\n\r\n// open email dialog\r\napp.on(\"ready\", () => {\r\n  let myFilePath = `${homePath}/Clarion_RemindMe_App`;\r\n  console.log(\"myFilePath\", myFilePath);\r\n  if (!fs.existsSync(folderName)) {\r\n    prompt({\r\n      label: \"Please Enter Your Email Id\",\r\n      value: \"\",\r\n      alwaysOnTop: true,\r\n      menuBarVisible: false,\r\n      icon: iconPath,\r\n      inputAttrs: {\r\n        type: \"email\",\r\n        required: true\r\n      },\r\n      type: \"input\"\r\n    })\r\n      .then(res => {\r\n        if (res === null) {\r\n        } else {\r\n          let regEx = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n          let validEmail = false;\r\n          validEmail = regEx.test(String(res).toLowerCase());\r\n          if (validEmail) {\r\n            try {\r\n              if (!fs.existsSync(folderName)) {\r\n                fs.mkdirSync(folderName, { recursive: true });\r\n                fs.writeFile(`${myFilePath}/userConfig.txt`, res, err => {\r\n                  if (err) {\r\n                    console.log(\r\n                      \"An error ocurred creating the file \" + err.message\r\n                    );\r\n                  }\r\n                  getXMLData();\r\n                });\r\n              } else {\r\n              }\r\n            } catch (err) {\r\n              console.error(err);\r\n            }\r\n          } else {\r\n            return false;\r\n          }\r\n        }\r\n      })\r\n      .catch(console.error);\r\n  } else {\r\n    getXMLData();\r\n  }\r\n});\r\n\r\n// read email file and post it\r\nfunction getXMLData() {\r\n  fs.readFile(`${folderName}/userConfig.txt`, \"utf-8\", (err, data) => {\r\n    if (err) {\r\n      console.log(\"An error ocurred reading the file :\" + err.message);\r\n      return;\r\n    } else {\r\n      const body = `<s:Envelope xmlns:s=\"http://schemas.xmlsoap.org/soap/envelope/\">\r\n      <s:Body>\r\n          <GetAffirmations xmlns=\"http://tempuri.org/\">\r\n              <emailId>${data}</emailId>\r\n          </GetAffirmations>\r\n      </s:Body>\r\n      </s:Envelope>`;\r\n      const baseURL = \"http://192.168.120.123:8080/RemindMeService.svc\";\r\n\r\n      const Http = new XMLHttpRequest();\r\n      Http.open(\"POST\", baseURL);\r\n      Http.setRequestHeader(\r\n        \"SoapAction\",\r\n        \"http://tempuri.org/IRemindMeService/GetAffirmations\"\r\n      );\r\n      Http.setRequestHeader(\"Content-Type\", \"text/xml\");\r\n      Http.send(body);\r\n\r\n      Http.onreadystatechange = function() {\r\n        let AffirmationFullPath = `${folderName}/AffirmationMessages`;\r\n\r\n        if (Http.readyState == 4) {\r\n          if (this.status === 200) {\r\n            let xmlData = parsingXML(Http.responseText);\r\n            console.log(\"****xml data ****\", xmlData);\r\n\r\n            // Write Affirmations File Here\r\n            try {\r\n              if (!fs.existsSync(AffirmationFullPath)) {\r\n                fs.mkdirSync(AffirmationFullPath, { recursive: true });\r\n                fs.writeFile(\r\n                  `${AffirmationFullPath}/AffirmationMessages.xml`,\r\n                  xmlData,\r\n                  err => {\r\n                    if (err) {\r\n                      console.log(\r\n                        \"An error ocurred creating the file \" + err.message\r\n                      );\r\n                    }\r\n\r\n                    mainWindow.reload();\r\n\r\n                    // send mypath to preload.js\r\n                    mainWindow.webContents.on(\"did-finish-load\", () => {\r\n                      mainWindow.webContents.send(\"pingPath\", homePath);\r\n                    });\r\n                  }\r\n                );\r\n              }\r\n            } catch (err) {\r\n              console.error(err);\r\n            }\r\n          } else {\r\n            // Write Error File Here\r\n            try {\r\n              if (!fs.existsSync(AffirmationFullPath)) {\r\n                fs.mkdirSync(AffirmationFullPath, { recursive: true });\r\n                fs.writeFile(\r\n                  `${AffirmationFullPath}/ErrorLog.txt`,\r\n                  Http.statusText,\r\n                  err => {\r\n                    if (err) {\r\n                      console.log(\r\n                        \"An error ocurred creating the file \" + err.message\r\n                      );\r\n                    }\r\n\r\n                    mainWindow.reload();\r\n\r\n                    // send mypath to preload.js\r\n                    mainWindow.webContents.on(\"did-finish-load\", () => {\r\n                      mainWindow.webContents.send(\"pingPath\", homePath);\r\n                    });\r\n                  }\r\n                );\r\n              } else {\r\n                fs.writeFile(\r\n                  `${AffirmationFullPath}/ErrorLog.txt`,\r\n                  Http.statusText,\r\n                  err => {\r\n                    if (err) {\r\n                      console.log(\r\n                        \"An error ocurred creating the file \" + err.message\r\n                      );\r\n                    }\r\n\r\n                    mainWindow.reload();\r\n\r\n                    // send mypath to preload.js\r\n                    mainWindow.webContents.on(\"did-finish-load\", () => {\r\n                      mainWindow.webContents.send(\"pingPath\", homePath);\r\n                    });\r\n                  }\r\n                );\r\n              }\r\n            } catch (err) {\r\n              console.error(err);\r\n            }\r\n          }\r\n        }\r\n      };\r\n    }\r\n  });\r\n}\r\n\r\n// auto launch\r\napp.on(\"ready\", () => {\r\n  let autoLaunch = new AutoLaunch({\r\n    name: \"Remind Me 0.0.0\",\r\n    path: app.getPath(\"exe\")\r\n  });\r\n  autoLaunch.isEnabled().then(isEnabled => {\r\n    if (!isEnabled) autoLaunch.enable();\r\n  });\r\n});\r\n\r\n// Tray icon\r\napp.on(\"ready\", () => {\r\n  tray = new Tray(nativeImage.createFromPath(trayIconPath));\r\n  console.log(\"Tray Icon\", trayIconPath);\r\n  const contextMenu = Menu.buildFromTemplate([\r\n    {\r\n      label: \"Suspend for 30 min\",\r\n      click: function() {\r\n        mainWindow.webContents.send(\"time\", 1800000);\r\n      }\r\n    },\r\n    {\r\n      label: \"Update Affirmations\",\r\n      click: function() {\r\n        mainWindow.webContents.send(\"time\", 0);\r\n      }\r\n    }\r\n  ]);\r\n  tray.setToolTip(\"Remind-Me\");\r\n  tray.setContextMenu(contextMenu);\r\n});\r\n\r\n// Single Instance\r\n/** Check if single instance, if not, simply quit new instance */\r\nlet isSingleInstance = app.requestSingleInstanceLock();\r\nif (!isSingleInstance) {\r\n  app.quit();\r\n}\r\n\r\n// Behaviour on second instance for parent process- Pretty much optional\r\napp.on(\"second-instance\", (event, argv, cwd) => {\r\n  if (mainWindow) {\r\n    if (mainWindow.isMinimized()) mainWindow.restore();\r\n    mainWindow.focus();\r\n  }\r\n});\r\n\r\napp.on(\"window-all-closed\", () => {\r\n  app.quit();\r\n});\r\n"],"sourceRoot":""}